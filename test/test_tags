#!/bin/bash

. "${BASH_SOURCE%/*}/funcs.sh" "$1"

# Fixes to make these checks work with Libav 12
#
# Change...
# ^TXXX=DESCRIPTION -> TXXX=comment
# ^TDRL             -> TDRC
# ^desc             -> ?cmt (but keep ^description=)
#
get_metadata() {
        local -n outvar=$2    # -n makes it a nameref.
        echo Checking $1
        cat "$1" >/dev/null
#        outvar=`./metadata "$1" | fgrep = | sed -r 's/^TXXX=DESCRIPTION/TXXX=comment/' | sed -r 's/^TDRL/TDRC/' | sed -r 's/^desc/?cmt/' | sed -r 's/^\?cmtription/description/' | sort | sed -r 's/^.*=Lavf.*//' | sed 's/[[:blank:]]*$//'`
        outvar=`./metadata "$1" | fgrep = | sort -u | sed -r 's/^.*=Lavf.*//'`
}

if [ "$DESTTYPE" == "mp4" ];
then
# mp4

get_metadata "$DIRNAME/obama.mp4" TAGS
echo Tags found: 
echo "$TAGS"
cmp -b - <(echo "$TAGS")<<END
album=US State of the Union 2011
artist=Barack Obama
compatible_brands=isomiso2mp41
copyright=Public Domain
date=2011-01-25

genre=Spoken
handler_name=SoundHandler
language=und
major_brand=isom
minor_version=512
title=The Internet [excerpt]
track=1
END

echo "*** PASS ***"

get_metadata "$DIRNAME/raven.mp4" TAGS
echo Tags found: 
echo "$TAGS"
cmp -b - <(echo "$TAGS")<<END
album=The Raven
artist=Edgar Allen Poe
comment=www.librivox.org
compatible_brands=isomiso2mp41
date=2007

genre=Speech
handler_name=SoundHandler
language=und
major_brand=isom
minor_version=512
title=the_raven
track=1
END
echo "*** PASS ***"

elif [ "$DESTTYPE" == "mp3" ];
then

# mp3
get_metadata "$DIRNAME/obama.mp3" TAGS
echo Tags found:
echo "$TAGS"
cmp -b - <(echo "$TAGS")<<END
DISCTOTAL=0
TRACKTOTAL=1
album=US State of the Union 2011
artist=Barack Obama
copyright=Public Domain
date=2011-01-25
disc=0


genre=Spoken
title=The Internet [excerpt]
track=1
END
echo "*** PASS ***"

get_metadata "$DIRNAME/raven.mp3" TAGS
echo Tags found: 
echo "$TAGS"
cmp -b - <(echo "$TAGS")<<END
ENSEMBLE=Edgar Allen Poe
album=The Raven
artist=Edgar Allen Poe
comment=www.librivox.org
date=2007


genre=Speech
title=the_raven
track=01
END
echo "*** PASS ***"

elif [ "$DESTTYPE" == "wav" ];
then
# wav
get_metadata "$DIRNAME/obama.wav" TAGS
echo Tags found:
echo "$TAGS"
cmp -b - <(echo "$TAGS")<<END
album=US State of the Union 2011
artist=Barack Obama
copyright=Public Domain
date=2011-01-25

genre=Spoken
title=The Internet [excerpt]
track=1
END
echo "*** PASS ***"

get_metadata "$DIRNAME/raven.wav" TAGS
echo Tags found:
echo "$TAGS"
cmp -b - <(echo "$TAGS")<<END
album=The Raven
artist=Edgar Allen Poe
comment=www.librivox.org
date=2007

genre=Speech
title=the_raven
track=01
END
echo "*** PASS ***"

elif [ "$DESTTYPE" == "ogg" ];
then

# ogg
get_metadata "$DIRNAME/obama.ogg" TAGS
echo Tags found:
echo "$TAGS"
cmp -b - <(echo "$TAGS")<<END
ALBUM=US State of the Union 2011
ARTIST=Barack Obama
COPYRIGHT=Public Domain
DATE=2011-01-25
DISCTOTAL=0

GENRE=Spoken
TITLE=The Internet [excerpt]
TRACKTOTAL=1
disc=0
track=1
END
echo "*** PASS ***"

get_metadata "$DIRNAME/raven.ogg" TAGS
echo Tags found:
echo "$TAGS"
cmp -b - <(echo "$TAGS")<<END
ALBUM=The Raven
ARTIST=Edgar Allen Poe
DATE=2007

ENSEMBLE=Edgar Allen Poe
GENRE=Speech
TITLE=the_raven
comment=Cover (front)
comment=www.librivox.org
track=01
END
echo "*** PASS ***"

elif [ "$DESTTYPE" == "webm" ];
then

# The folks who made up WebM actually forgot about tags. Yup. So we can only store
# a title in the file, nothing else...

# webm
get_metadata "$DIRNAME/obama.webm" TAGS
echo Tags found:
echo "$TAGS"
cmp -b - <(echo "$TAGS")<<END

title=The Internet [excerpt]
END
echo "*** PASS ***"

get_metadata "$DIRNAME/raven.webm" TAGS
echo Tags found:
echo "$TAGS"
cmp -b - <(echo "$TAGS")<<END

title=the_raven
END
echo "*** PASS ***"

else
echo "Internal error, unknown type $DESTTYPE. Fix script!"
exit 99
fi

echo OK

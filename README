MP3FS
=====

MP3FS: A read-only FUSE filesystem which transcodes audio formats
(currently FLAC) to MP3 on the fly when opened and read. This was
written to enable me to use my FLAC collection with software and/or
hardware which only understands MP3. e.g. gmediaserver to a netgear
MP101 mp3 player.

When a file is opened, the decoder and encoder are initialised and
the file metadata is read. At this time the final filesize can be
determined as we only support constant bitrate mp3s.

As the file is read, it is transcoded into an internal per-file
buffer. This buffer continues to grow while the file is being read
until the whole file is transcoded in memory. The memory is freed
only when the file is closed. This simplifies the implementation.

Seeking within a file will cause the file to be transcoded up to the
seek point (if not already done). This is not usually a problem
since most programs will read a file from start to finish. 

A special exception to this is when an application tries to read the
very last block first. Many applications do this to look for an
id3v1 tag (stored in the last 128 bytes of the file). When this is
detected, the filesystem simply return zeros (I dont support id3v1
tags). This *dramatically* speeds up applications, however it could
potentially lead to corrupt mp3 files if the zeros are still in
kernel cache when the application comes back to read the actual
audio sequentially. In my experimentation this has not happened, I
always get another read for the final block.

ID3v2 tags are created from the vorbis comments in the flac file
when the file is first opened. They are located at the start of the
file. As such, an application scanning a directory to read tags
should not cause too much of a performance hit as the actual encoder
does not need to be invoked (depending on how much data the read
asks for).

For building and usage instructions see INSTALL

Copyright (C) David Collett (daveco@users.sourceforge.net)

This program can be distributed under the terms of the GNU GPL.
See the file COPYING.